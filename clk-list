#!/usr/bin/perl
use strict;
use warnings;
use App::Clk::Report;
use POSIX qw( strftime );

my $rpt = Report->new(@ARGV);
while ( my $entry = $rpt->next ) {
    my $time = to_localtime($entry->{time});
    my $duration = pretty_duration($entry);
    printf "%6s %11s %4s %s\n",
        substr( $entry->{id}, 0, 6 ),
        strftime("%m/%d %H:%M", localtime($time) ),
        $duration,
        $entry->{text};
}

sub pretty_duration {
    my ($entry) = @_;

    # cases in which we don't want, or can't have, the duration
    return '' if not exists $entry->{duration};
    return '' if $entry->{text} eq 'out';

    # make it pretty
    my $duration = $entry->{duration};
    my @units = (
        w => 60*60*24*7,
        d => 60*60*24,
        h => 60*60,
        m => 60,
        s => 1,
    );
    while ( my ( $letter, $seconds ) = splice @units, 0, 2 ) {
        return sprintf( "%d$letter", int( $duration / $seconds ) )
          if $duration >= $seconds;
    }
    return '0s' if $duration == 0;

    warn "I can't make the duration $duration pretty\n";
    return '';
}

__END__

=head1 NAME

clk list - List entries

=head1 SYNOPSIS

B<clk list> [options...]

=head1 DESCRIPTION

By default, displays a summary of all of today's entries with each entry on a
line by itself.  The output looks something like:

    a5fc6d 01/09 16:03  38m first one today
    b3c155 01/09 16:41  31s second one
    607991 01/09 16:42  10m third time
    f9e455 01/09 16:53      out

Using the first row as a template, the columns are:

    a5fc6d - this entry's abbreviated ID
    01/09  - the entry's date in mm/dd format
    16:03  - the entry's time in hh:mm format (24-hour)
    38m    - the duration between this entry and the next one

The remainder of the line is the entry's "text" attribute.

=head1 OPTIONS

All the same options as L<clk-entry-search>.  For instance, to display all the
entries for this week, run C<clk list --period 'this week'>.

=head1 EXIT CODES

 0   - the command executed successfully
 255 - an unknown error occurred.  Check the command output for details

#!/usr/bin/perl
use strict;
use warnings;
use IPC::Open2;

# process command line arguments
my $storing_entry = 1;
for ( my $i=0; $i <= $#ARGV; $i++ ) {
    if ( $ARGV[$i] eq '--output-only' ) {
        $storing_entry = 0;
        splice @ARGV, $i, 1;  # remove the processed argument
    }
}

my ( $pid, $reader, $writer );
if ($storing_entry) {    # send output to clk-store-entry
    $pid = open2( $reader, $writer, 'clk-store-entry', './play' );
}
else {                   # send output to STDOUT
    $writer = \*STDOUT;
}

# generate the entry time
my $time =  $ENV{CLK_TIME} || time;
my @parts = (gmtime $time)[ 0 .. 5];
$parts[4]++;  # use human-readable day
$parts[5] += 1900; # ... and year
printf {$writer} "time: %04d-%02d-%02dT%02d:%02d:%02dZ\n", reverse @parts;

# generate the entry text
print {$writer} 'text: ' . join(' ', @ARGV) . "\n"
    if @ARGV;

# if storing the entry, output its entry ID
if ($storing_entry) {
    close $writer;    # send EOF
    my $entry_id = <$reader>;
    waitpid $pid, 0;
    print $entry_id if $entry_id;
}

__END__

=head1 NAME

clk-in - Begin recording time for a task

=head1 SYNOPSIS

clk in [--output-only] [text...]

=head1 DESCRIPTION

Create a new entry to record the current time with an optional C<text>.  When
beginning to work on a new task, the start time should be recorded by running
L<clk-in>.  By default, the current time is recorded.  Any words that are not
interpreted as options or associated arguments are joined with spaces and
considered part of the C<text>.

=head1 OPTIONS

=head2 --output-only

Only display the new entry's content on STDOUT, don't put a copy in the entry
store.  This option is mostly useful for testing and scripting.  Without
this option, L<clk-in> sends the entry content to L<clk-store-entry> to
be saved in the entry store.
